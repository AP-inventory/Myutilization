#data_collection_script.ps1

$threshold = 80  # Set the CPU utilization threshold
$startTime = (Get-Date).AddMonths(-1)  # Set the start time for data collection

# Function to get the top process consuming CPU
function Get-TopProcess {
    $process = Get-Process | Sort-Object -Property CPU -Descending | Select-Object -First 1
    return $process
}

# Function to check if CPU utilization is above the threshold
function Check-CPUUtilization {
    $cpuUtilization = (Get-Counter -Counter "\Processor(_Total)\% Processor Time").CounterSamples.CookedValue
    if ($cpuUtilization -gt $threshold) {
        return $true
    }
    return $false
}

# Initialize variables to track time and top process
$endTime = $null
$timeTaken = $null
$topProcess = $null

# Main script
$currentTime = $startTime

# Loop until CPU utilization goes below the threshold
while (!(Check-CPUUtilization)) {
    $currentTime = Get-Date
    $topProcess = Get-TopProcess
    $timeTaken = $currentTime - $startTime

    # Wait for a specific interval before checking again
    Start-Sleep -Seconds 5  # Adjust the interval as needed
}

# Calculate the time taken for the CPU utilization to drop below the threshold
$endTime = $currentTime
$timeTaken = $endTime - $startTime

# Create an object with the collected data
$dataObject = [PSCustomObject] @{
    ThresholdTime = $endTime
    TotalCPUUtilization = (Get-Counter -Counter "\Processor(_Total)\% Processor Time").CounterSamples.CookedValue
    TopProcess = $topProcess.ProcessName
    TimeTaken = $timeTaken
}

# Export the collected data to a CSV file
$dataObject | Export-Csv -Path "CPUThresholdData.csv" -NoTypeInformation




""""‚Äù""""""""""

$threshold = 20  # Set the CPU utilization threshold

# Function to get the top 3 processes consuming CPU
function Get-TopProcesses {
    $processes = Get-Process | Sort-Object -Property CPU -Descending | Select-Object -First 3
    return $processes
}

# Function to check if CPU utilization is above the threshold
function Check-CPUUtilization {
    $cpuUtilization = (Get-Counter -Counter '\Processor(_Total)\% Processor Time').CounterSamples.CookedValue
    if ($cpuUtilization -gt $threshold) {
        return $true
    }
    return $false
}

# Main script
$startTime = Get-Date
$endTime = $startTime.AddHours(1)
$interval = New-TimeSpan -Minutes 2

$collectedData = @()

while (Get-Date -le $endTime) {
    $thresholdTime = $null
    $currentTime = $null
    $topProcesses = @()
    $timeTaken = $null

    while (!(Check-CPUUtilization)) {
        Start-Sleep -Milliseconds 500  # Adjust the interval as needed
    }

    $thresholdTime = Get-Date
    $currentTime = $thresholdTime

    while ($currentTime -le ($thresholdTime.AddMinutes(2))) {
        $topProcesses += Get-TopProcesses
        $currentTime = Get-Date
        Start-Sleep -Milliseconds 500  # Adjust the interval as needed
    }

    $endTime = $currentTime
    $timeTaken = $endTime - $thresholdTime

    # Create an object with the collected data
    $dataObject = [PSCustomObject] @{
        ThresholdTime = $thresholdTime
        EndTime = $endTime
        TotalCPUUtilization = (Get-Counter -Counter '\Processor(_Total)\% Processor Time').CounterSamples.CookedValue
        TopProcesses = $topProcesses.ProcessName
        TimeTaken = $timeTaken
    }

    # Add the data object to the collected data array
    $collectedData += $dataObject

    Start-Sleep -Seconds $interval.TotalSeconds  # Adjust the interval as needed
}

# Export the collected data to a CSV file
$collectedData | Export-Csv -Path "CPUData.csv" -NoTypeInformation



____________________________________________________________________

# Set the threshold for normal CPU utilization (e.g., 10%)
$threshold = 10

# Create an empty array to store the data
$data = @()

# Define the time range for data collection
$endTime = (Get-Date).AddMinutes(1)
$startTime = $endTime.AddSeconds(-1)

# Loop until the current time reaches the end time
while ((Get-Date) -le $endTime) {
    # Get the CPU utilization percentage
    $cpuUtilization = (Get-Counter -Counter '\Processor(_Total)\% Processor Time').CounterSamples.CookedValue

    # Check if the CPU utilization has crossed the threshold
    if ($cpuUtilization -ge $threshold) {
        # Get the top 3 process usage percentage
        $topProcesses = Get-Process | Sort-Object -Property CPU -Descending | Select-Object -First 3
        $top3UsagePercentage = ($topProcesses | Measure-Object -Property CPU -Sum).Sum

        # Calculate the time taken to come back to normal
        $timeTaken = (Get-Date) - $startTime

        # Create an object with the collected data
        $dataObject = [PSCustomObject] @{
            CPUUtilization = $cpuUtilization
            Top3UsagePercentage = $top3UsagePercentage
            TimeTaken = $timeTaken
        }

        # Add the data object to the array
        $data += $dataObject
    }

    # Wait for a specific interval before checking again
    Start-Sleep -Seconds 1
}

# Export the collected data to a CSV file
$data | Export-Csv -Path "CPUData.csv" -NoTypeInformation

